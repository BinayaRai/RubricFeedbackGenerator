@using AIS_RubricFeedbackGenerator.ViewModels
@model List<AIS_RubricFeedbackGenerator.Models.Task>
@{
	ViewData["Title"] = "Task List";
}
<h2 class="mb-2">List of Task</h2>

<div class="row mb-2">
	<div class="col">
		<a class="btn btn-primary" asp-controller="Task" asp-action="Create">
			<i class="fa fa-plus me-1"></i> Add New Task
		</a>
	</div>
</div>

<table id="myTable" class="table w-100">
	<thead>
		<tr>
			<th>TaskID</th>
			<th>Title</th>
			<th>Description</th>
			<th>Created By</th>
			<th>Created At</th>
			<th>Action</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var task in Model)
		{
			<tr>
				<td>@task.TaskId</td>
				<td>@task.Title</td>
				<td>@task.Description</td>
				<td>@task.CreatedBy</td>
				<td>@task.CreatedAt.ToString("dd/MM/yyyy")</td>
				<td style="white-space:nowrap">
					<a class="btn btn-primary btn-sm" asp-controller="Task" asp-action="Edit" asp-route-id="@task.TaskId" title="Edit Task">
						<i class="fa-solid fa-pen-to-square"></i>
				   </a>
					<button type="button"
							class="btn btn-danger btn-sm"
							title="Delete Task"
							data-bs-toggle="modal"
							data-bs-target="#deleteModal"
							data-task-id="@task.TaskId"
							data-task-title="@task.Title">
						<i class="fa-solid fa-trash"></i>
					</button>
				</td>
			</tr>
		}
	</tbody>
</table>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete the task <strong id="taskTitleToDelete"></strong>?
			</div>
			<div class="modal-footer">
				<form id="deleteForm" method="post" onsubmit="return disableDeleteButton()">
					@Html.AntiForgeryToken()
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
					<button type="submit" id="confirmDeleteBtn" class="btn btn-danger" disabled>Delete (2)</button>
				</form>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		$(function () {
			$('#myTable').DataTable();

			const deleteModal = document.getElementById('deleteModal');
			let countdown; // store countdown timer id

			deleteModal.addEventListener('show.bs.modal', function (event) {
				const button = event.relatedTarget;
				const taskId = button.getAttribute('data-task-id');
				const taskTitle = button.getAttribute('data-task-title');

				// Set form action
				const form = document.getElementById('deleteForm');
				form.action = '/Task/Delete/' + taskId;

				// Set title inside modal
				document.getElementById('taskTitleToDelete').textContent = taskTitle;

				// Countdown logic for disabling Delete button
				const deleteBtn = document.getElementById('confirmDeleteBtn');
				let seconds = 2;
				deleteBtn.disabled = true;
				deleteBtn.textContent = `Delete (${seconds})`;

				// Clear any previous countdown (important if modal reopened fast)
				if (countdown) {
					clearInterval(countdown);
				}

				countdown = setInterval(() => {
					seconds--;
					if (seconds > 0) {
						deleteBtn.textContent = `Delete (${seconds})`;
					} else {
						clearInterval(countdown);
						deleteBtn.disabled = false;
						deleteBtn.textContent = 'Delete';
					}
				}, 1000);
			});
		});

		// Disable the delete button after submit to prevent multiple submits
		function disableDeleteButton() {
			const btn = document.getElementById('confirmDeleteBtn');
			btn.disabled = true;
			btn.innerText = 'Deleting...';
			return true; // allow form submission
		}
	</script>
}